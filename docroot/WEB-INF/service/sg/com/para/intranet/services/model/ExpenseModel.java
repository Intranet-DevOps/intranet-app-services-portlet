/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package sg.com.para.intranet.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Expense service. Represents a row in the &quot;intranet_expense&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link sg.com.para.intranet.services.model.impl.ExpenseModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link sg.com.para.intranet.services.model.impl.ExpenseImpl}.
 * </p>
 *
 * @author Fernando Karnagi
 * @see Expense
 * @see sg.com.para.intranet.services.model.impl.ExpenseImpl
 * @see sg.com.para.intranet.services.model.impl.ExpenseModelImpl
 * @generated
 */
public interface ExpenseModel extends BaseModel<Expense> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a expense model instance should use the {@link Expense} interface instead.
	 */

	/**
	 * Returns the primary key of this expense.
	 *
	 * @return the primary key of this expense
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this expense.
	 *
	 * @param primaryKey the primary key of this expense
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the expense ID of this expense.
	 *
	 * @return the expense ID of this expense
	 */
	public int getExpenseId();

	/**
	 * Sets the expense ID of this expense.
	 *
	 * @param expenseId the expense ID of this expense
	 */
	public void setExpenseId(int expenseId);

	/**
	 * Returns the employee ID of this expense.
	 *
	 * @return the employee ID of this expense
	 */
	public int getEmployeeId();

	/**
	 * Sets the employee ID of this expense.
	 *
	 * @param employeeId the employee ID of this expense
	 */
	public void setEmployeeId(int employeeId);

	/**
	 * Returns the expense date of this expense.
	 *
	 * @return the expense date of this expense
	 */
	public Date getExpenseDate();

	/**
	 * Sets the expense date of this expense.
	 *
	 * @param expenseDate the expense date of this expense
	 */
	public void setExpenseDate(Date expenseDate);

	/**
	 * Returns the submission date of this expense.
	 *
	 * @return the submission date of this expense
	 */
	public Date getSubmissionDate();

	/**
	 * Sets the submission date of this expense.
	 *
	 * @param submissionDate the submission date of this expense
	 */
	public void setSubmissionDate(Date submissionDate);

	/**
	 * Returns the amount of this expense.
	 *
	 * @return the amount of this expense
	 */
	public double getAmount();

	/**
	 * Sets the amount of this expense.
	 *
	 * @param amount the amount of this expense
	 */
	public void setAmount(double amount);

	/**
	 * Returns the project ID of this expense.
	 *
	 * @return the project ID of this expense
	 */
	public int getProjectId();

	/**
	 * Sets the project ID of this expense.
	 *
	 * @param projectId the project ID of this expense
	 */
	public void setProjectId(int projectId);

	/**
	 * Returns the category of this expense.
	 *
	 * @return the category of this expense
	 */
	@AutoEscape
	public String getCategory();

	/**
	 * Sets the category of this expense.
	 *
	 * @param category the category of this expense
	 */
	public void setCategory(String category);

	/**
	 * Returns the remarks of this expense.
	 *
	 * @return the remarks of this expense
	 */
	@AutoEscape
	public String getRemarks();

	/**
	 * Sets the remarks of this expense.
	 *
	 * @param remarks the remarks of this expense
	 */
	public void setRemarks(String remarks);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(sg.com.para.intranet.services.model.Expense expense);

	@Override
	public int hashCode();

	@Override
	public CacheModel<sg.com.para.intranet.services.model.Expense> toCacheModel();

	@Override
	public sg.com.para.intranet.services.model.Expense toEscapedModel();

	@Override
	public sg.com.para.intranet.services.model.Expense toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}